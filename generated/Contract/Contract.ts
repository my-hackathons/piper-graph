// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Extension extends EthereumEvent {
  get params(): Extension__Params {
    return new Extension__Params(this);
  }
}

export class Extension__Params {
  _event: Extension;

  constructor(event: Extension) {
    this._event = event;
  }

  get param0(): ExtensionParam0Struct {
    return this._event.parameters[0].value.toTuple() as ExtensionParam0Struct;
  }
}

export class ExtensionParam0Struct extends EthereumTuple {
  get extension(): ExtensionParam0ExtensionStruct {
    return this[0].toTuple() as ExtensionParam0ExtensionStruct;
  }

  get owner(): Address {
    return this[1].toAddress();
  }
}

export class ExtensionParam0ExtensionStruct extends EthereumTuple {
  get hash(): string {
    return this[0].toString();
  }

  get developer(): string {
    return this[1].toString();
  }

  get developerETH(): string {
    return this[2].toString();
  }

  get name(): string {
    return this[3].toString();
  }

  get overview(): string {
    return this[4].toString();
  }

  get category(): string {
    return this[5].toString();
  }

  get version(): string {
    return this[6].toString();
  }

  get size(): BigInt {
    return this[7].toBigInt();
  }

  get iconURL(): string {
    return this[8].toString();
  }

  get crx(): string {
    return this[9].toString();
  }

  get rating(): i32 {
    return this[10].toI32();
  }

  get reviews(): BigInt {
    return this[11].toBigInt();
  }

  get downloads(): BigInt {
    return this[12].toBigInt();
  }

  get updated(): BigInt {
    return this[13].toBigInt();
  }
}

export class ExtensionVersion extends EthereumEvent {
  get params(): ExtensionVersion__Params {
    return new ExtensionVersion__Params(this);
  }
}

export class ExtensionVersion__Params {
  _event: ExtensionVersion;

  constructor(event: ExtensionVersion) {
    this._event = event;
  }

  get hash(): string {
    return this._event.parameters[0].value.toString();
  }

  get version(): string {
    return this._event.parameters[1].value.toString();
  }

  get crx(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class Contract__createNewExtensionInput_extensionStruct extends EthereumTuple {
  get hash(): string {
    return this[0].toString();
  }

  get developer(): string {
    return this[1].toString();
  }

  get developerETH(): string {
    return this[2].toString();
  }

  get name(): string {
    return this[3].toString();
  }

  get overview(): string {
    return this[4].toString();
  }

  get category(): string {
    return this[5].toString();
  }

  get version(): string {
    return this[6].toString();
  }

  get size(): BigInt {
    return this[7].toBigInt();
  }

  get iconURL(): string {
    return this[8].toString();
  }

  get crx(): string {
    return this[9].toString();
  }

  get rating(): i32 {
    return this[10].toI32();
  }

  get reviews(): BigInt {
    return this[11].toBigInt();
  }

  get downloads(): BigInt {
    return this[12].toBigInt();
  }

  get updated(): BigInt {
    return this[13].toBigInt();
  }
}

export class Contract extends SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  isExtension(_hash: string): boolean {
    let result = super.call("isExtension", [EthereumValue.fromString(_hash)]);
    return result[0].toBoolean();
  }

  createNewExtension(
    _hash: string,
    _extension: Contract__createNewExtensionInput_extensionStruct
  ): boolean {
    let result = super.call("createNewExtension", [
      EthereumValue.fromString(_hash),
      EthereumValue.fromTuple(_extension)
    ]);
    return result[0].toBoolean();
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateNewExtensionCall extends EthereumCall {
  get inputs(): CreateNewExtensionCall__Inputs {
    return new CreateNewExtensionCall__Inputs(this);
  }

  get outputs(): CreateNewExtensionCall__Outputs {
    return new CreateNewExtensionCall__Outputs(this);
  }
}

export class CreateNewExtensionCall__Inputs {
  _call: CreateNewExtensionCall;

  constructor(call: CreateNewExtensionCall) {
    this._call = call;
  }

  get _hash(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _extension(): CreateNewExtensionCall_extensionStruct {
    return this._call.inputValues[1].value.toTuple() as CreateNewExtensionCall_extensionStruct;
  }
}

export class CreateNewExtensionCall__Outputs {
  _call: CreateNewExtensionCall;

  constructor(call: CreateNewExtensionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateNewExtensionCall_extensionStruct extends EthereumTuple {
  get hash(): string {
    return this[0].toString();
  }

  get developer(): string {
    return this[1].toString();
  }

  get developerETH(): string {
    return this[2].toString();
  }

  get name(): string {
    return this[3].toString();
  }

  get overview(): string {
    return this[4].toString();
  }

  get category(): string {
    return this[5].toString();
  }

  get version(): string {
    return this[6].toString();
  }

  get size(): BigInt {
    return this[7].toBigInt();
  }

  get iconURL(): string {
    return this[8].toString();
  }

  get crx(): string {
    return this[9].toString();
  }

  get rating(): i32 {
    return this[10].toI32();
  }

  get reviews(): BigInt {
    return this[11].toBigInt();
  }

  get downloads(): BigInt {
    return this[12].toBigInt();
  }

  get updated(): BigInt {
    return this[13].toBigInt();
  }
}
